{"version":3,"sources":["components/SolutionCanvas.tsx","components/SolutionDisplay.tsx","solver/recursive.ts","components/SolutionBuilder.tsx","components/Footer.tsx","App.tsx","index.tsx"],"names":["palette","SolutionCanvas","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rods","rodsNr","canvas","ctx","getHeigth","discs","getWidthOfTheLargestDisc","getWidth","width","height","refs","getContext","drawBase","_this2","widthOfTheLargestDisc","rodHeight","rodSpot","rodInterval","Array","fill","map","rod","spot","fillStyle","fillRect","beginPath","lineWidth","moveTo","lineTo","forEach","stroke","drawDiscs","_this3","discsAtRod","discWidth","discLocations","disc","i","discInitY","discInitX","react_default","a","createElement","ref","React","Component","SolutionDisplay","_React$Component","componentDidUpdate","oldProps","solutionId","console","log","push","setState","currentIndex","timer","clearInterval","setInterval","cycleSolution","getAnimationSpeed","newIndex","solution","length","from","to","newLocations","toConsumableArray","lastIndexOf","getOptimalMoveCount","Math","pow","currentId","inherits","createClass","key","value","SolutionCanvas_SolutionCanvas","concat","solve","numberOfDiscs","b","c","name","move","n","source","target","aux","pop","SolutionBuilder","setDiscs","event","discAmount","setSolution","className","htmlFor","type","min","max","onChange","onClick","Footer","href","App","SolutionBuilder_SolutionBuilder","SolutionDisplay_SolutionDisplay","components_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.89afd12c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport interface SolutionCanvasProps {\r\n  discs: number;\r\n  discLocations: number[]\r\n}\r\n\r\ninterface SolutionCanvasState {\r\n  width: number,\r\n  height: number\r\n}\r\n\r\nconst palette: string[] = [\r\n  '#030603',\r\n  '#060C06',\r\n  '#091209',\r\n  '#0B170C',\r\n  '#0E1D0F',\r\n  '#112312',\r\n  '#142915',\r\n  '#162E18',\r\n  '#19341B',\r\n  '#1C3A1E',\r\n  '#1E3F20',\r\n  '#325034',\r\n  '#466148',\r\n  '#5B735C',\r\n  '#6F8471',\r\n  '#849685',\r\n  '#98A799',\r\n  '#ADB9AD',\r\n  '#C1CAC2',\r\n  '#D6DCD6',\r\n  '#EAEDEA'\r\n]\r\n\r\nexport default class SolutionCanvas extends React.Component<SolutionCanvasProps> {\r\n  state: SolutionCanvasState;\r\n\r\n  rods: number[];\r\n  rodsNr: number;\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n\r\n  constructor(props: SolutionCanvasProps) {\r\n    super(props);\r\n    this.rodsNr = 3;\r\n    this.state = {width: 100, height: 100};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.canvas = this.refs.canvas as HTMLCanvasElement;\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n    this.drawBase();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.drawBase();\r\n  }\r\n\r\n  getHeigth = () => (this.props.discs * 20) + 60;\r\n  getWidthOfTheLargestDisc = () => 40 + (20 * this.props.discs)\r\n  getWidth = () => this.getWidthOfTheLargestDisc() * this.rodsNr + (20 * this.rodsNr);\r\n\r\n  drawBase() {\r\n    const widthOfTheLargestDisc = this.getWidthOfTheLargestDisc();\r\n    const width = this.getWidth();\r\n    const height = this.getHeigth();\r\n    const rodHeight = height - 40;\r\n\r\n    let rodSpot = 20 + widthOfTheLargestDisc / 2;\r\n    let rodInterval = widthOfTheLargestDisc + 10;\r\n    this.rods = new Array(this.rodsNr).fill(null);\r\n    this.rods = this.rods.map(rod => {\r\n      const spot = rodSpot;\r\n      rodSpot += rodInterval;\r\n      return spot\r\n    });\r\n\r\n    this.ctx.fillStyle = '#ffffff';\r\n    this.ctx.fillRect(0, 0, width, height);\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.lineWidth = 4;\r\n    this.ctx.moveTo(0, height - 10);\r\n    this.ctx.lineTo(width, height - 10);\r\n    this.rods.forEach(rod => {\r\n      this.ctx.moveTo(rod, height - 10);\r\n      this.ctx.lineTo(rod, (height - 10) - rodHeight);\r\n    })\r\n\r\n    this.ctx.stroke();\r\n\r\n    this.drawDiscs();\r\n  }\r\n\r\n  drawDiscs() {\r\n    const discsAtRod = Array(this.rodsNr).fill(0);\r\n    let discWidth = 40 + (20 * this.props.discs)\r\n    this.props.discLocations.forEach((disc, i) => {\r\n      const discInitY = this.getHeigth() - 10 - (discsAtRod[disc] * 20) - 20;\r\n      const discInitX = this.rods[disc] - (discWidth / 2);\r\n\r\n      this.ctx.fillStyle = palette[i];\r\n      this.ctx.fillRect(discInitX, discInitY, discWidth, 20);\r\n      discWidth -= 20;\r\n      discsAtRod[disc] += 1;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <canvas ref=\"canvas\" width={this.getWidth()} height={this.getHeigth()}/>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Solution } from '../solver/towers.interface';\r\nimport SolutionCanvas from './SolutionCanvas';\r\n\r\nexport interface SolutionDisplayProps {\r\n  discs: number\r\n  solution: Solution;\r\n  solutionId: number;\r\n}\r\n\r\ninterface SolutionDisplayState {\r\n  currentId: number;\r\n  currentIndex: number;\r\n  timer: NodeJS.Timeout;\r\n  discLocations: number[]\r\n}\r\n\r\nexport class SolutionDisplay extends React.Component<SolutionDisplayProps> {\r\n  state: SolutionDisplayState\r\n\r\n  constructor(props: SolutionDisplayProps) {\r\n    super(props);\r\n    this.state = {\r\n      currentId: null,\r\n      currentIndex: null,\r\n      timer: null,\r\n      discLocations: [0, 0, 0, 0, 0]\r\n    };\r\n  }\r\n\r\n  componentDidUpdate = (oldProps: SolutionDisplayProps) => {\r\n    if (oldProps.solutionId !== this.props.solutionId) {\r\n      console.log('new solution received');\r\n      const discLocations = [];\r\n      for (let i = 0; i < this.props.discs; i++) {\r\n        discLocations.push(0);\r\n      }\r\n      this.setState({\r\n        currentIndex: -1,\r\n        discLocations\r\n      });\r\n      if(this.state.timer) {\r\n        clearInterval(this.state.timer);\r\n      }\r\n      const timer = setInterval(this.cycleSolution, this.getAnimationSpeed(this.props.discs));\r\n      this.setState({timer});\r\n    }\r\n  }\r\n\r\n  cycleSolution = () => {\r\n    const newIndex = this.state.currentIndex + 1;\r\n    if (newIndex >= this.props.solution.length) {\r\n      clearInterval(this.state.timer)\r\n      this.setState({\r\n        timer: null\r\n      })\r\n    } else {\r\n      const from = this.props.solution[newIndex][0];\r\n      const to = this.props.solution[newIndex][1];\r\n      const newLocations = [...this.state.discLocations];\r\n      newLocations[newLocations.lastIndexOf(from)] = to;\r\n      this.setState({ discLocations: newLocations, currentIndex: newIndex });\r\n    }\r\n  }\r\n\r\n  getAnimationSpeed = (discs) => {\r\n    if (discs < 6) {\r\n      return 750;\r\n    } else if (discs < 11) {\r\n      return 500;\r\n    } else if (discs < 16) {\r\n      return 200;\r\n    } else {\r\n      return 50;\r\n    }\r\n  }\r\n\r\n  getOptimalMoveCount = () => (2 ** this.props.discs) - 1\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <SolutionCanvas discs={this.props.discs} discLocations={this.state.discLocations}/><br />\r\n        {`${this.state.currentIndex + 1} / ${this.getOptimalMoveCount()}`}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { Solution } from \"./towers.interface\";\r\n\r\ninterface Rod extends Array<number> {\r\n  name?: number;\r\n}\r\n\r\nexport default function solve (numberOfDiscs: number): Solution {\r\n  const a: Rod = Array(numberOfDiscs).fill(null).map((a, i) => i + 1);\r\n  const b: Rod = [];\r\n  const c: Rod = [];\r\n  a.name = 0;\r\n  b.name = 1;\r\n  c.name = 2;\r\n  const solution: Solution = [];\r\n  move(numberOfDiscs, a, c, b, solution);\r\n\r\n  return solution;\r\n}\r\n\r\nfunction move(n: number, source: Rod, target: Rod, aux: Rod, solution: Solution) {\r\n  if (n > 0) {\r\n    move(n - 1, source, aux, target, solution);\r\n    target.push(source.pop());\r\n    solution.push([source.name, target.name]);\r\n    move(n - 1, aux, target, source, solution);\r\n  }\r\n}\r\n","import React from 'react'\r\nimport solve from '../solver/recursive';\r\nimport './solutionBuilder.css';\r\nimport { Solution } from '../solver/towers.interface';\r\n\r\nexport interface SolutionBuilderProps {\r\n  setSolution: (discs: number, solution: Solution) => void;\r\n}\r\n\r\ninterface SolutionBuilderState {\r\n  discAmount: number\r\n}\r\n\r\nexport class SolutionBuilder extends React.Component<SolutionBuilderProps> {\r\n  state: SolutionBuilderState;\r\n\r\n  constructor(props: SolutionBuilderProps) {\r\n    super(props);\r\n    this.state = {\r\n      discAmount: 5\r\n    };\r\n  }\r\n\r\n  setDiscs = (event) => {\r\n    this.setState({\r\n      discAmount: event.target.value\r\n    });\r\n  }\r\n\r\n  solve = () => {\r\n    const solution: Solution = solve(this.state.discAmount);\r\n    this.props.setSolution(this.state.discAmount, solution);\r\n  }\r\n \r\n  render() {\r\n    return(\r\n      <div className=\"solution\">\r\n        <label htmlFor=\"discs\">Set the number of discs</label>\r\n        <input\r\n          name=\"discs\"\r\n          type=\"range\"\r\n          min=\"3\"\r\n          max=\"20\"\r\n          value={this.state.discAmount}\r\n          onChange={this.setDiscs}\r\n        />\r\n        <span className=\"number\">{this.state.discAmount}</span>\r\n        <button onClick={this.solve}>Solve</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './footer.css'\r\n\r\nconst Footer: React.FC = () => {\r\n  return(\r\n    <div className=\"footer\">\r\n      <hr />\r\n      🌞 <a href=\"https://en.wikipedia.org/wiki/Tower_of_Hanoi\">Wikipedia</a> | <a href=\"https://github.com/jvuor/hanoi-towers\">Github</a> 🌞\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.css';\nimport { SolutionDisplay } from './components/SolutionDisplay';\nimport { SolutionBuilder } from './components/SolutionBuilder';\nimport { Solution } from './solver/towers.interface';\nimport Footer from './components/Footer';\n\ninterface AppState {\n  discs: number,\n  solution: Solution,\n  solutionId: number;\n}\n\nclass App extends React.Component {\n  state: AppState;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      discs: 5,\n      solution: null,\n      solutionId: 0\n    }\n  }\n\n  setSolution = (discs: number, solution: Solution) => {\n    this.setState({discs, solution, solutionId: this.state.solutionId + 1});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SolutionBuilder setSolution={this.setSolution} />\n        <SolutionDisplay discs={this.state.discs} solution={this.state.solution} solutionId={this.state.solutionId} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}